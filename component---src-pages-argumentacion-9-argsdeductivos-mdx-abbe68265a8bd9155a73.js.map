{"version":3,"sources":["webpack:///./src/pages/argumentacion/9-argsdeductivos.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TitleSlide","Slide","Definition","TwoCols","Animate","Example","Flex","Argument","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","clase","parentName","animate","word","className","style","isMDXComponent"],"mappings":"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","file":"component---src-pages-argumentacion-9-argsdeductivos-mdx-abbe68265a8bd9155a73.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/juanrloaiza/Documents/Universidad/URosario/2021-1S/Diapositivas/src/components/presentation.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TitleSlide = makeShortcode(\"TitleSlide\");\nconst Slide = makeShortcode(\"Slide\");\nconst Definition = makeShortcode(\"Definition\");\nconst TwoCols = makeShortcode(\"TwoCols\");\nconst Animate = makeShortcode(\"Animate\");\nconst Example = makeShortcode(\"Example\");\nconst Flex = makeShortcode(\"Flex\");\nconst Argument = makeShortcode(\"Argument\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <TitleSlide title=\"Argumentos deductivos\" clase=\"Argumentación\" mdxType=\"TitleSlide\" />\n    <Slide mdxType=\"Slide\">\n      <h1>{`Argumentos`}</h1>\n      <p>{`Un `}<strong parentName=\"p\">{`argumento`}</strong>{` es un conjunto de proposiciones especial.`}</p>\n      <Definition animate word=\"Argumento\" mdxType=\"Definition\">\n        <p>{`Conjunto de proposiciones en las que unas (conclusiones) se `}<strong parentName=\"p\">{`infieren`}</strong>{` de otras (premisas).`}</p>\n      </Definition>\n      <div className=\"two-cols\">\n  <div className=\"col-left fragment\">\n    <div className=\"argument\">\n      <p>Todos los humanos son mortales.</p>\n      <p>Jorge es humano.</p>\n      <p>Jorge es mortal.</p>\n    </div>\n  </div>\n  <div className=\"col-right fragment\">\n    <div className=\"argument\">\n      <p>Si alguien saca 5.0 en el parcial, el profesor será feliz.</p>\n      <p>Iván sacó 5.0 en el parcial.</p>\n      <p>El profesor es feliz.</p>\n    </div>\n  </div>\n      </div>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Tipos de argumentos`}</h1>\n      <p>{`Hay dos tipos generales de argumentos.`}</p>\n      <TwoCols style={{\n        \"marginBottom\": \"1rem\"\n      }} mdxType=\"TwoCols\">\n        <div>\n          <Animate mdxType=\"Animate\">\n            <p><strong parentName=\"p\">{`Argumentos deductivos`}</strong></p>\n            <p><em parentName=\"p\">{`Argumentos cuya conclusión se sigue `}<strong parentName=\"em\">{`necesariamente`}</strong>{` de las premisas`}</em></p>\n          </Animate>\n          <div className=\" fragment argument\">\n            <p>{`Todos los humanos son mortales.`}</p>\n            <p>{`Jorge es humano.`}</p>\n            <p>{`Jorge es mortal.`}</p>\n          </div>\n        </div>\n        <div>\n          <Animate mdxType=\"Animate\">\n            <p><strong parentName=\"p\">{`Argumentos inductivos`}</strong></p>\n            <p><em parentName=\"p\">{`Argumentos cuya conclusión se sigue `}<strong parentName=\"em\">{`probablemente`}</strong>{` de las premisas`}</em></p>\n          </Animate>\n          <div className=\" fragment argument\">\n            <p>{`La mayoría de humanos son diestros.`}</p>\n            <p>{`Jorge es humano.`}</p>\n            <p>{`Jorge es diestro.`}</p>\n          </div>\n        </div>\n      </TwoCols>\n      <Animate mdxType=\"Animate\">\n        <p>{`A continuación nos concentraremos en cómo formular buenos `}<strong parentName=\"p\">{`argumentos deductivos`}</strong>{`.`}</p>\n      </Animate>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Argumentos deductivos`}</h1>\n      <p>{`Un argumento deductivo es aquel cuya conclusión se sigue `}<strong parentName=\"p\">{`necesariamente`}</strong>{` de las premisas.`}</p>\n      <p>{`Hay dos criterios para juzgar un argumento deductivo.`}</p>\n      <TwoCols style={{\n        \"margin\": \"2rem 0\"\n      }} mdxType=\"TwoCols\">\n        <div>\n          <Animate mdxType=\"Animate\">\n            <p><strong parentName=\"p\">{`Validez`}</strong></p>\n            <p>{`Que la conclusión se siga con necesidad de las premisas.`}</p>\n          </Animate>\n        </div>\n        <div>\n          <Animate mdxType=\"Animate\">\n            <p><strong parentName=\"p\">{`Solidez`}</strong></p>\n            <p>{`Que el argumento sea válido y tenga premisas verdaderas.`}</p>\n          </Animate>\n        </div>\n      </TwoCols>\n      <Animate mdxType=\"Animate\">\n        <p>{`Veamos cada una de estas propiedades.`}</p>\n      </Animate>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Validez deductiva`}</h1>\n      <p>{`Un argumento es `}<strong parentName=\"p\">{`deductivamente válido`}</strong>{` sii su conclusión se sigue `}<em parentName=\"p\">{`necesariamente`}</em>{` de las premisas.`}</p>\n      <Example mdxType=\"Example\">\n        <TwoCols mdxType=\"TwoCols\">\n          <div className=\"argument fragment\">\n            <p>{`Todos los humanos son mortales.`}</p>\n            <p>{`Jorge es humano.`}</p>\n            <p>{`Jorge es mortal.`}</p>\n          </div>\n          <div className=\"argument fragment\">\n            <p>{`Todos los humanos son mortales.`}</p>\n            <p>{`Mario es mortal.`}</p>\n            <p>{`Mario es humano.`}</p>\n          </div>\n        </TwoCols>\n      </Example>\n      <Animate mdxType=\"Animate\">\n        <p>{`¿Qué significa este `}<strong parentName=\"p\">{`necesariamente`}</strong>{`?`}</p>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Si las premisas son verdaderas, la conclusión `}<strong parentName=\"p\">{`necesariamente`}</strong>{` lo es.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Es `}<strong parentName=\"p\">{`imposible`}</strong>{` que las premisas sean verdaderas mientras que la conclusión sea falsa.`}</p>\n          </li>\n        </ul>\n      </Animate>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Solidez`}</h1>\n      <p>{`Un argumento puede ser válido y `}<em parentName=\"p\">{`no`}</em>{` tener premisas verdaderas.`}</p>\n      <Example mdxType=\"Example\">\n        <Flex mdxType=\"Flex\">\n          <div className=\"fragment argument\">\n            <p>{`Todos los humanos son azules.`}</p>\n            <p>{`Jorge es humano.`}</p>\n            <p>{`Jorge es azul.`}</p>\n          </div>\n          <div className=\"fragment argument\">\n            <p>{`El profesor estudió filosofía o economía.`}</p>\n            <p>{`El profesor no estudió filosofía.`}</p>\n            <p>{`El profesor estudió economía.`}</p>\n          </div>\n        </Flex>\n      </Example>\n      <Animate mdxType=\"Animate\">\n        <p>{`Si un argumento es válido y `}<em parentName=\"p\">{`además`}</em>{` tiene premisas verdaderas, es `}<strong parentName=\"p\">{`sólido`}</strong>{`.`}</p>\n      </Animate>\n      <Example mdxType=\"Example\">\n        <div className=\"fragment argument\">\n          <p>{`Si estoy en Bogotá, estoy a más de 1000m sobre el nivel del mar.`}</p>\n          <p>{`Estoy en Bogotá.`}</p>\n          <p>{`Estoy a más de 1000m sobre el nivel del mar.`}</p>\n        </div>\n      </Example>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Verdad y validez`}</h1>\n      <p>{`Recordemos que un argumento puede ser `}<strong parentName=\"p\">{`válido`}</strong>{` y tener `}<strong parentName=\"p\">{`premisas falsas`}</strong>{`.`}</p>\n      <Example animate mdxType=\"Example\">\n        <Argument mdxType=\"Argument\">\n          <p>{`Si todos vienen a clase, perderán el curso.`}</p>\n          <p>{`Todos vienen a clase.`}</p>\n          <p>{`Perderán el curso.`}</p>\n        </Argument>\n      </Example>\n      <Animate mdxType=\"Animate\">\n        <p>{`La `}<strong parentName=\"p\">{`validez`}</strong>{` de un argumento no depende de la `}<strong parentName=\"p\">{`verdad de hecho`}</strong>{` de sus premisas o conclusión.`}</p>\n        <p>{`Cuando un argumento es `}<strong parentName=\"p\">{`válido`}</strong>{` y `}<em parentName=\"p\">{`además`}</em>{` tiene premisas verdaderas, es un argumento `}<strong parentName=\"p\">{`sólido`}</strong>{`.`}</p>\n      </Animate>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Ejemplos`}</h1>\n      <p>{`¿Válido o inválido?`}</p>\n      <Animate mdxType=\"Animate\">\n        <table>\n  <tbody>\n    <tr style={{\n              \"borderBottom\": \"1px solid black\"\n            }}>\n              <td>\n                <p>{`Si algún estudiante pierde el parcial, estaré triste.`}</p>\n                <p>{`Un estudiante perdió el parcial.`}</p>\n                <p>{`Por lo tanto, estoy triste.`}</p>\n              </td>\n      <td>Válido</td>\n    </tr>\n    <tr style={{\n              \"borderBottom\": \"1px solid black\"\n            }}>\n              <td style={{\n                \"paddingTop\": \"1rem\"\n              }}>\n                <p>{`Basta con estudiar para pasar el curso.`}</p>\n                <p>{`Pasé el curso.`}</p>\n                <p>{`Por lo tanto, estudié.`}</p>\n              </td>\n      <td style={{\n                \"paddingTop\": \"1rem\"\n              }}>Inválido</td>\n    </tr>\n    <tr>\n              <td style={{\n                \"paddingTop\": \"1rem\"\n              }}>\n                <p>{`Si no estudio, no paso el curso.`}</p>\n                <p>{`Pasé el curso.`}</p>\n                <p>{`Por lo tanto, estudié.`}</p>\n              </td>\n      <td style={{\n                \"paddingTop\": \"1rem\"\n              }}>Válido</td>\n    </tr>\n  </tbody>\n        </table>\n      </Animate>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Patrones de argumentos deductivos`}</h1>\n      <p>{`Hay varios patrones deductivos comunes que ustedes ya conocen.`}</p>\n      <Animate mdxType=\"Animate\">\n        <p>{`Las reglas de la `}<strong parentName=\"p\">{`deducción natural`}</strong>{` constituyen reglas de inferencia deductiva.`}</p>\n        <p>{`Varias de estas reglas constituyen patrones de argumentos deductivos.`}</p>\n        <p>{`Ejemplo: `}<em parentName=\"p\">{`Modus ponens`}</em></p>\n      </Animate>\n      <Example animate mdxType=\"Example\">\n        <Argument mdxType=\"Argument\">\n          <p>{`Si Arias estudia, aprende mucho.`}</p>\n          <p>{`Arias estudia.`}</p>\n          <p>{`Arias aprende mucho.`}</p>\n        </Argument>\n      </Example>\n    </Slide>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Actividad`}</h1>\n      <p>{`Nos dividiremos en 4 grupos. Cada grupo nos presentará algunas reglas de deducción (puede ser en lenguaje formal) y un argumento de ejemplo por cada regla (en lenguaje natural).`}</p>\n      <div style={{\n        \"display\": \"flex\",\n        \"flexWrap\": \"wrap\",\n        \"justifyContent\": \"space-around\"\n      }}>\n        <div className=\"fragment\" style={{\n          \"width\": \"50%\",\n          \"marginBottom\": \"1rem\"\n        }}>\n          <p><strong parentName=\"p\">{`Grupo 1`}</strong></p>\n          <p>{`Modus tollens`}</p>\n          <p>{`Prueba condicional (I→)`}</p>\n          <p>{`Silogismo hipotético`}</p>\n        </div>\n        <div className=\"fragment\" style={{\n          \"width\": \"50%\",\n          \"marginBottom\": \"1rem\"\n        }}>\n          <p><strong parentName=\"p\">{`Grupo 2`}</strong></p>\n          <p>{`Silogismo disyuntivo`}</p>\n          <p>{`Dilema (Ev)`}</p>\n          <p>{`Reducción al absurdo`}</p>\n        </div>\n        <div className=\"fragment\" style={{\n          \"width\": \"50%\",\n          \"marginBottom\": \"1rem\"\n        }}>\n          <p><strong parentName=\"p\">{`Grupo 3`}</strong></p>\n          <p>{`Generalización (I∃)`}</p>\n          <p>{`Prueba existencial (E∃)`}</p>\n          <p>{`Sustitución (=)`}</p>\n        </div>\n        <div className=\"fragment\" style={{\n          \"width\": \"50%\",\n          \"marginBottom\": \"1rem\"\n        }}>\n          <p><strong parentName=\"p\">{`Grupo 4`}</strong></p>\n          <p>{`Universalizacíon (I∀)`}</p>\n          <p>{`Instanciación (E∀)`}</p>\n          <p>{`Intercambio de cuantificadores (∀/∃)`}</p>\n        </div>\n      </div>\n    </Slide>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}