{"version":3,"sources":["webpack:///./src/pages/logica/1-condiciones.mdx","webpack:///./src/components/layout.js","webpack:///./src/components/animate.js","webpack:///./src/components/presentation.js","webpack:///./src/components/slide.js","webpack:///./src/components/psection.js","webpack:///./src/components/titleslide.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TitleSlide","PSection","Slide","Animate","Example","TwoCols","Tooltip","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","clase","title","parentName","isMDXComponent","children","elements","React","Children","toArray","className","Flex","style","display","justifyContent","margin","Card","fragmentListItem","li","cloneElement","ul","map","ol","table","newChildren","child","originalType","newBody","row","newRow","cell","createElement","updatedChildren","Presentation","render","shortcodes","Definition","Meta","height","this","Component","secTitle","sectionSlides","date","Date","getFullYear"],"mappings":"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","file":"component---src-pages-logica-1-condiciones-mdx-b6415042943087c543db.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/juanrloaiza/Documents/Universidad/URosario/2021-1S/Diapositivas/src/components/presentation.js\";\nimport { TruthTable } from \"/src/components/logic/truthtable\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TitleSlide = makeShortcode(\"TitleSlide\");\nconst PSection = makeShortcode(\"PSection\");\nconst Slide = makeShortcode(\"Slide\");\nconst Animate = makeShortcode(\"Animate\");\nconst Example = makeShortcode(\"Example\");\nconst TwoCols = makeShortcode(\"TwoCols\");\nconst Tooltip = makeShortcode(\"Tooltip\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TitleSlide clase=\"Lógica ECH\" title=\"Condiciones de verdad\" mdxType=\"TitleSlide\" />\n    <PSection title=\"Introducción\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Condiciones de verdad`}</h1>\n        <p>{`Hemos distinguido proposiciones simples (o atómicas) de complejas.`}</p>\n        <Animate mdxType=\"Animate\">\n          <ul>\n            <li parentName=\"ul\">{`Proposiciones atómicas: Pa, Pb, Pc…`}</li>\n            <li parentName=\"ul\">{`Proposiciones complejas: Pa & Pb, Pa v (Pb → (Pc ↔ Pd))`}</li>\n          </ul>\n          <p>{`¿Cómo podemos determinar la verdad o falsedad (i.e. el valor de verdad) de una proposición compleja?\nPa v (Pb → (Pc ↔ Pd))`}</p>\n        </Animate>\n      </Slide>\n      <Slide mdxType=\"Slide\">\n        <h1>{`Condiciones de verdad`}</h1>\n        <p>{`El valor de verdad de una proposición compleja depende del valor de verdad de sus partes.`}</p>\n        <Animate mdxType=\"Animate\">\n          <Example mdxType=\"Example\">Juan juega ajedrez y Marcela juega ajedrez.</Example>\n          <p>{`Esta proposición es verdadera si y sólo si:`}</p>\n          <ul>\n            <li parentName=\"ul\">{`“Juan juega ajedrez” es verdadera`}</li>\n            <li parentName=\"ul\">{`“Marcela juega ajedrez” es verdadera`}</li>\n          </ul>\n        </Animate>\n      </Slide>\n      <Slide mdxType=\"Slide\">\n        <h1>{`Condiciones de verdad`}</h1>\n        <Example mdxType=\"Example\">Laura quiere una moto y (un carro o una camioneta).</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Laura está satisfecha si Laura tiene:`}</p>\n          <ul>\n            <li parentName=\"ul\">{`Una moto + Un carro`}</li>\n            <li parentName=\"ul\">{`Una moto + Una camioneta`}</li>\n            <li parentName=\"ul\">{`Una moto + Un carro + Una camioneta`}</li>\n          </ul>\n          <p>{`El valor de verdad de una proposición puede descomponerse en el valor de verdad de sus partes.`}</p>\n        </Animate>\n      </Slide>\n      <Slide mdxType=\"Slide\">\n        <h1>{`Proposiciones atómicas`}</h1>\n        <p>{`Pensemos en el caso más simple: una `}<em parentName=\"p\">{`proposición atómica`}</em>{`.`}</p>\n        <Animate mdxType=\"Animate\">\n          <p>{`Una proposición atómica puede ser `}<em parentName=\"p\">{`verdadera`}</em>{` o `}<em parentName=\"p\">{`falsa`}</em>{` (i.e. tiene `}<em parentName=\"p\">{`dos valores de verdad`}</em>{` posibles.)`}</p>\n          <p>{`Podemos representar esto en una tabla.`}</p>\n          <TwoCols mdxType=\"TwoCols\">\n            <TruthTable mdxType=\"TruthTable\">\n              <p>{`Pa, Qa,| Pa, →,  Qa   \\\\newline\nV,  V*,| V,  V,  V   \\\\newline\nF,  V, | F,  V,  V`}</p>\n            </TruthTable>\n            <Tooltip mdxType=\"Tooltip\">Tabla de verdad</Tooltip>\n          </TwoCols>\n        </Animate>\n      </Slide>\n    </PSection>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\n\nexport function TwoCols({ children, ...props }) {\n  let elements = React.Children.toArray(children);\n\n  return (\n    <div className=\"two-cols\" {...props}>\n      <div className={`col-left ${props.className}`}>{elements[0]}</div>\n      <div className={`col-right ${props.className}`}>{elements[1]}</div>\n    </div>\n  );\n}\n\nexport function Flex(props) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        margin: \"1rem\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport function Card(props) {\n  return (\n    <div className=\"card\">\n      {props.title ? <div className=\"card-title\">{props.title}</div> : null}\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { MDXProvider } from \"@mdx-js/react\";\n\nconst fragmentListItem = (li) => {\n  return React.cloneElement(li, { className: \"fragment\" });\n};\n\nconst ulFragment = ({ children, ...props }) => {\n  return <ul>{React.Children.map(children, fragmentListItem)}</ul>;\n};\n\nconst olFragment = ({ children, ...props }) => {\n  return <ol>{React.Children.map(children, fragmentListItem)}</ol>;\n};\n\nconst tableFragment = ({ children, ...props }) => {\n  let newChildren = React.Children.map(children, (child) => {\n    if (child.props.originalType === \"tbody\") {\n      let newBody = React.Children.map(child.props.children, (row) => {\n        let newRow = React.Children.map(row.props.children, (cell) => {\n          return React.cloneElement(cell, { className: \"fragment\" });\n        });\n        return React.createElement(\"tr\", {}, newRow);\n      });\n      return React.createElement(\"tbody\", {}, newBody);\n    } else {\n      return child;\n    }\n  });\n  return React.createElement(\"table\", {...props}, newChildren);\n};\n\nconst components = {\n  ul: ulFragment,\n  ol: olFragment,\n  table: tableFragment,\n};\n\nexport function Animate({ children, ...props }) {\n  let updatedChildren = React.Children.map(children, (child) => {\n    return React.cloneElement(child, { className: \"fragment\" });\n  });\n\n  return (\n    <MDXProvider {...props} components={components}>\n      {updatedChildren}\n    </MDXProvider>\n  );\n}\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\nimport \"../styles/reveal.css\";\nimport \"../styles/theme.scss\";\n\n/*\nimport Reveal from \"reveal.js\";\nimport Notes from \"reveal.js/plugin/notes/notes.esm.js\";\n*/\nimport { Slide } from \"./slide\";\nimport { PSection } from \"./psection\";\nimport { TitleSlide } from \"./titleslide\";\nimport { Animate } from \"./animate\";\nimport { Example, Tooltip, Definition, Meta } from \"./utils\";\nimport { TwoCols, Flex, Card } from \"./layout\";\n\nclass Presentation extends React.Component {\n  /* componentDidMount() {\n    if (typeof navigator !== \"undefined\") {\n      Reveal.initialize({\n        navigationMode: \"linear\",\n        plugins: [Notes],\n        width: 1000,\n        slideNumber: \"c/t\",\n        hash: true,\n      });\n    }\n  }*/\n\n  render() {\n    const shortcodes = {\n      Slide,\n      TitleSlide,\n      Animate,\n      PSection,\n      Example,\n      Tooltip,\n      Definition,\n      TwoCols,\n      Flex,\n      Card,\n      Meta\n    };\n\n    return (\n      <div style={{ height: \"95vh\" }}>\n        <div className=\"reveal\">\n          <div className=\"slides\">\n            <MDXProvider components={shortcodes}>\n              {this.props.children}\n            </MDXProvider>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Presentation;\n","import React from \"react\";\n\nexport function Slide(props) {\n  return (\n    <section>\n      <h3 className=\"sectionTitle\">{props.secTitle}</h3>\n      {props.children}\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport function PSection(props) {\n  const sectionSlides = React.Children.map(props.children, (child, title) => {\n    return React.cloneElement(child, {\n      secTitle: props.title,\n    });\n  });\n\n  return <section>{sectionSlides}</section>;\n}\n","import React from \"react\";\n\nexport function TitleSlide(props) {\n  const date = new Date().getFullYear();\n\n  return (\n    <section className=\"title\">\n      <h3>{props.clase}</h3>\n      <h1> {props.title}</h1>\n\n      <div className=\"author\">Juan R. Loaiza</div>\n\n      <small>\n        Escuela de Ciencias Humanas <br />\n        Universidad del Rosario <br />\n        {date}\n      </small>\n    </section>\n  );\n}\n"],"sourceRoot":""}