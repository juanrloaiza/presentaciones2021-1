{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/animate.js","webpack:///./src/components/draft.js","webpack:///./src/pages/drafts/4-condicionales.mdx","webpack:///./src/components/slide.js","webpack:///./src/components/psection.js","webpack:///./src/components/titleslide.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["TwoCols","children","props","elements","React","Children","toArray","className","Flex","style","display","justifyContent","margin","fragmentListItem","li","cloneElement","components","ul","map","ol","table","newChildren","child","originalType","newBody","row","newRow","cell","createElement","Animate","updatedChildren","Presentation","render","shortcodes","Slide","TitleSlide","PSection","Example","Tooltip","Definition","width","this","Component","_frontmatter","makeShortcode","name","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","title","align","isMDXComponent","secTitle","sectionSlides","date","Date","getFullYear","clase","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-pages-drafts-4-condicionales-mdx-3d2ee951005cbf9efb5e.js","sourcesContent":["import React from \"react\";\n\nexport function TwoCols({ children, ...props }) {\n  let elements = React.Children.toArray(children);\n\n  return (\n    <div className=\"two-cols\" {...props}>\n      <div className={`col-left ${props.className}`}>{elements[0]}</div>\n      <div className={`col-right ${props.className}`}>{elements[1]}</div>\n    </div>\n  );\n}\n\nexport function Flex(props) {\n  return (\n    <div\n      {...props}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        margin: \"1rem\"\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { MDXProvider } from \"@mdx-js/react\";\n\nconst fragmentListItem = (li) => {\n  return React.cloneElement(li, { className: \"fragment\" });\n};\n\nconst ulFragment = ({ children, ...props }) => {\n  return <ul>{React.Children.map(children, fragmentListItem)}</ul>;\n};\n\nconst olFragment = ({ children, ...props }) => {\n  return <ol>{React.Children.map(children, fragmentListItem)}</ol>;\n};\n\nconst tableFragment = ({ children, ...props }) => {\n  let newChildren = React.Children.map(children, (child) => {\n    if (child.props.originalType == \"tbody\") {\n      let newBody = React.Children.map(child.props.children, (row) => {\n        let newRow = React.Children.map(row.props.children, (cell) => {\n          return React.cloneElement(cell, { className: \"fragment\" });\n        });\n        return React.createElement(\"tr\", {}, newRow);\n      });\n      return React.createElement(\"tbody\", {}, newBody);\n    } else {\n      return child;\n    }\n  });\n  return React.createElement(\"table\", {props}, newChildren);\n};\n\nconst components = {\n  ul: ulFragment,\n  ol: olFragment,\n  table: tableFragment,\n};\n\nexport function Animate({ children, ...props }) {\n  let updatedChildren = React.Children.map(children, (child) => {\n    return React.cloneElement(child, { className: \"fragment\" });\n  });\n\n  return (\n    <MDXProvider {...props} components={components}>\n      {updatedChildren}\n    </MDXProvider>\n  );\n}\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\n\nimport { Slide } from \"./slide\";\nimport { PSection } from \"./psection\";\nimport { TitleSlide } from \"./titleslide\";\nimport { Animate } from \"./animate\";\nimport { Example, Tooltip, Definition } from \"./utils\";\nimport { TwoCols, Flex } from \"./layout\";\n\nclass Presentation extends React.Component {\n\n  render() {\n    const shortcodes = {\n      Slide,\n      TitleSlide,\n      Animate,\n      PSection,\n      Example,\n      Tooltip,\n      Definition,\n      TwoCols,\n      Flex,\n    };\n\n    return (\n      <div className=\"draft\" style={{ width: \"75ch\", margin: 'auto' }}>\n\n            <MDXProvider components={shortcodes}>\n              {this.props.children}\n            </MDXProvider>\n          </div>\n \n    );\n  }\n}\n\nexport default Presentation;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/juanrloaiza/Documents/Universidad/URosario/2021-1S/Diapositivas/src/components/draft.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Slide = makeShortcode(\"Slide\");\nconst PSection = makeShortcode(\"PSection\");\nconst Example = makeShortcode(\"Example\");\nconst Flex = makeShortcode(\"Flex\");\nconst Tooltip = makeShortcode(\"Tooltip\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <Slide mdxType=\"Slide\">\n      <h1>{`En el capítulo anterior...`}</h1>\n      <p>{`Podemos expresar ahora proposiciones usando `}<strong parentName=\"p\">{`tres operadores lógicos`}</strong>{`:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`Negación ('~')`}</li>\n        <li parentName=\"ul\">{`Conjunción ('&')`}</li>\n        <li parentName=\"ul\">{`Disyunción ('v')`}</li>\n      </ul>\n      <p>{`Esto nos permite expresar una cantidad de `}<strong parentName=\"p\">{`proposiciones`}</strong>{`.`}</p>\n      <table>\n        <thead parentName=\"table\">\n          <tr parentName=\"thead\">\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Oración`}</th>\n            <th parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Formalización`}</th>\n          </tr>\n        </thead>\n        <tbody parentName=\"table\">\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Marcela juega tanto ajedrez como damas.`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Am & Dm`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Marcela juega algún juego entre ajedrez o damas.`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Am v Dm`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`Marcela no juega ni ajedrez ni damas.`}</td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`~Am & ~Dm`}</td>\n          </tr>\n          <tr parentName=\"tbody\">\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}></td>\n            <td parentName=\"tr\" {...{\n              \"align\": null\n            }}>{`~(Am v Dm)`}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Slide>\n    <PSection title=\"Tipos de condiciones\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Condiciones`}</h1>\n        <p>{`A veces en el lenguaje natural queremos expresar que algunas proposiciones sólo son verdaderas si otras también lo son.`}</p>\n        <Example mdxType=\"Example\">Si mi cédula es par, saldré a comprar hoy.</Example>\n        <p>{`En este caso tenemos dos proposiciones que guardan una relación particular: si una es verdadera, la otra también.`}</p>\n        <Example mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n            <p>{`Juan tiene cédula par.`}</p>\n            <p>{`Juan sale a comprar hoy.`}</p>\n          </Flex>\n        </Example>\n        <p>{`Esto significa que dos proposiciones pueden relacionarse una siendo `}<strong parentName=\"p\">{`condición`}</strong>{` de otra.`}</p>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones suficientes y necesarias`}</h1>\n        <p>{`En lógica distinguimos dos tipos de condiciones.`}</p>\n        <Flex mdxType=\"Flex\">\n          <div>\n            <Example mdxType=\"Example\">\n              <p>{`Saldré a comprar hoy `}<strong parentName=\"p\">{`si`}</strong>{` tengo cédula par.`}</p>\n            </Example>\n            <p>{`Tener cédula par es `}<strong parentName=\"p\">{`suficiente`}</strong>{` para que Juan salga a comprar hoy.`}</p>\n          </div>\n          <div>\n            <Example mdxType=\"Example\">\n              <p>{`Saldré a comprar hoy `}<strong parentName=\"p\">{`sólo si`}</strong>{` tengo cédula par.`}</p>\n            </Example>\n            <p>{`Tener cédula par es `}<strong parentName=\"p\">{`necesario`}</strong>{` para que Juan salga a comprar hoy.`}</p>\n          </div>\n        </Flex>\n        <p>{`¿Qué distingue las `}<strong parentName=\"p\">{`condiciones suficientes`}</strong>{` de las `}<strong parentName=\"p\">{`condiciones necesarias`}</strong>{`?`}</p>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones suficientes`}</h1>\n        <p>{`Una proposición es `}<strong parentName=\"p\">{`condición suficiente`}</strong>{` de otra si la verdad de la primera implica la verdad de la segunda.`}</p>\n        <Example mdxType=\"Example\">Basta con que me pongan reggaetón para que me enrumbe.</Example>\n        <Flex mdxType=\"Flex\">\n          <div>\n            <p>{`Esta proposición nos dice que es `}<strong parentName=\"p\">{`suficiente`}</strong>{` como que me pongan reggaetón para que me enrumbe.`}</p>\n            <ul>\n              <li parentName=\"ul\">{`Si la proposición `}<strong parentName=\"li\">{`«`}{`A Juan le pusieron reggaetón`}{`»`}</strong>{` es verdadera, la proposición `}<strong parentName=\"li\">{`«`}{`Juan se enrumba`}{`»`}</strong>{` también lo será.`}</li>\n            </ul>\n          </div>\n          <div>\n            <p>{`Sin embargo, puede `}<strong parentName=\"p\">{`no ser necesario`}</strong>{` que me pongan reggaetón para que esto ocurra (e.g. puedo enrumbarme con salsa o merengue).`}</p>\n            <ul>\n              <li parentName=\"ul\">{`Si la proposición `}<strong parentName=\"li\">{`«`}{`A Juan le pusieron reggaetón`}{`»`}</strong>{` es falsa, esto `}<em parentName=\"li\">{`no implica`}</em>{` que la proposición `}<strong parentName=\"li\">{`«`}{`Juan se enrumba`}{`»`}</strong>{` también lo sea.`}</li>\n            </ul>\n          </div>\n        </Flex>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones necesarias`}</h1>\n        <p>{`Una proposición es `}<strong parentName=\"p\">{`condición necesaria`}</strong>{` de otra si la falsedad de la primera implica la falsedad de la segunda.`}</p>\n        <Example mdxType=\"Example\">Necesito que me pongan reggaetón para que me enrumbe.</Example>\n        <Flex mdxType=\"Flex\">\n          <div>\n            <p>{`Esta proposición nos dice que es `}<strong parentName=\"p\">{`necesario`}</strong>{` como que me pongan reggaetón para que me enrumbe.`}</p>\n            <ul>\n              <li parentName=\"ul\">{`Si la proposición `}<strong parentName=\"li\">{`«`}{`A Juan le pusieron reggaetón`}{`»`}</strong>{` es falsa, la proposición `}<strong parentName=\"li\">{`«`}{`Juan se enrumba`}{`»`}</strong>{` también lo será.`}</li>\n            </ul>\n          </div>\n          <div>\n            <p>{`Sin embargo, puede `}<strong parentName=\"p\">{`no ser suficiente`}</strong>{` que me pongan reggaetón para que esto ocurra (e.g. puedo necesitar además estar con amigos).`}</p>\n            <ul>\n              <li parentName=\"ul\">{`Si la proposición `}<strong parentName=\"li\">{`«`}{`A Juan le pusieron reggaetón`}{`»`}</strong>{` es verdadera, esto `}<em parentName=\"li\">{`no implica`}</em>{` que la proposición `}<strong parentName=\"li\">{`«`}{`Juan se enrumba`}{`»`}</strong>{` también lo sea.`}</li>\n            </ul>\n          </div>\n        </Flex>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Síntesis`}</h1>\n        <p>{`Tenemos entonces que una proposición puede ser `}<strong parentName=\"p\">{`condición`}</strong>{` de otra de dos maneras:`}</p>\n        <Flex mdxType=\"Flex\">\n          <div style={{\n            \"width\": \"100%\"\n          }}>\n            <p><strong parentName=\"p\">{`Condición suficiente`}</strong></p>\n            <p>{`Si P es verdadera, Q es verdadera.`}</p>\n          </div>\n          <div style={{\n            \"width\": \"100%\"\n          }}>\n            <p><strong parentName=\"p\">{`Condición necesaria`}</strong></p>\n            <p>{`Si P es falsa, Q es falsa.`}</p>\n          </div>\n        </Flex>\n        <Tooltip mdxType=\"Tooltip\">\n          <p>{`Que algo sea condición suficiente de algo no significa que sea condición necesaria y viceversa.`}</p>\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejercicios`}</h1>\n        <p>{`Para los siguientes enunciados, diga si el primer enunciado es condición `}<strong parentName=\"p\">{`suficiente`}</strong>{` o `}<strong parentName=\"p\">{`necesaria`}</strong>{` del segundo.`}</p>\n        <table>\n          <thead parentName=\"table\">\n            <tr parentName=\"thead\">\n              <th parentName=\"tr\" {...{\n                \"align\": null\n              }}></th>\n              <th parentName=\"tr\" {...{\n                \"align\": null\n              }}></th>\n              <th parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Condición`}</th>\n            </tr>\n          </thead>\n          <tbody parentName=\"table\">\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Sacar 4.0 en la nota final de la clase.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Pasar el curso.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Suficiente`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Tener internet.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Asistir a clase por Zoom.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Necesaria`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Ser mayor de edad.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Tener derecho a votar.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Necesaria`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Jugar ajedrez.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Jugar un juego de mesa.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Suficiente`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Cumplir con todos sus créditos.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Graduarse de su programa.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Necesaria`}</td>\n            </tr>\n          </tbody>\n        </table>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`¿Cuándo estoy mintiendo?`}</h1>\n        <p>{`Supongamos que hago las siguientes afirmaciones. ¿Cuánto estoy mintiendo?`}</p>\n        <Flex mdxType=\"Flex\">\n          <Flex mdxType=\"Flex\">\n            <div>\n              <p>{`\"Saldría contigo `}<strong parentName=\"p\">{`si`}</strong>{` tienes carro.\"`}</p>\n              <table>\n                <thead parentName=\"table\">\n                  <tr parentName=\"thead\">\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}></th>\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`Salgo`}</th>\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`No salgo`}</th>\n                  </tr>\n                </thead>\n                <tbody parentName=\"table\">\n                  <tr parentName=\"tbody\">\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`Tiene carro`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}><strong parentName=\"td\">{`¡Mentira!`}</strong></td>\n                  </tr>\n                  <tr parentName=\"tbody\">\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`No tiene carro`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Flex>\n          <Flex mdxType=\"Flex\">\n            <div>\n              <p>{`\"Saldría contigo `}<strong parentName=\"p\">{`sólo si`}</strong>{` tienes carro.\"`}</p>\n              <table>\n                <thead parentName=\"table\">\n                  <tr parentName=\"thead\">\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}></th>\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`Salgo`}</th>\n                    <th parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`No salgo`}</th>\n                  </tr>\n                </thead>\n                <tbody parentName=\"table\">\n                  <tr parentName=\"tbody\">\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`Tiene carro`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                  </tr>\n                  <tr parentName=\"tbody\">\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`No tiene carro`}</td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}><strong parentName=\"td\">{`¡Mentira!`}</strong></td>\n                    <td parentName=\"tr\" {...{\n                      \"align\": null\n                    }}>{`V`}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </Flex>\n        </Flex>\n      </Slide>\n    </PSection>\n    <PSection title=\"Condicionales\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n# Condicionales\n        <p>{`Podemos expresar las relaciones entre condiciones usando el operador `}<strong parentName=\"p\">{`condicional`}</strong>{` ('→' o '`}{`⊃`}{`').`}</p>\n        <Example mdxType=\"Example\">\n          <p>{`Salgo contigo si tienes carro.`}</p>\n          <p>{`Tienes carro → Salgo contigo`}</p>\n          <p>{`Ca → Sja`}</p>\n        </Example>\n        <p>{`El operador condicional dice que la proposición de la izquiera `}<strong parentName=\"p\">{`implica`}</strong>{` la proposición de la derecha.`}</p>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejemplos`}</h1>\n        <table>\n          <thead parentName=\"table\">\n            <tr parentName=\"thead\">\n              <th parentName=\"tr\" {...{\n                \"align\": null\n              }}></th>\n              <th parentName=\"tr\" {...{\n                \"align\": null\n              }}></th>\n            </tr>\n          </thead>\n          <tbody parentName=\"table\">\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Si Arias tiene gato, su ropa tiene pelos.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Ga → Pa`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Bernal es estudiante si tiene tiempo.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Tb → Eb`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Si Castro trabaja y estudia, no juega videojuegos.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`(Tc & Ec) → ~Vc`}</td>\n            </tr>\n            <tr parentName=\"tbody\">\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Si Díaz estudia, estudia filosofía o matemáticas.`}</td>\n              <td parentName=\"tr\" {...{\n                \"align\": null\n              }}>{`Ed → (Fd v Md)`}</td>\n            </tr>\n          </tbody>\n        </table>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Relaciones lógicas`}</h1>\n        <p>{`Es importante tener presente que el condicional expresa una `}<strong parentName=\"p\">{`relación lógica`}</strong>{` (i.e., inferencial).`}</p>\n        <Example mdxType=\"Example\">Puedo votar → Tengo cédula</Example>\n        <p>{`Este enunciado es verdadero, pues si es verdad que puedo votar, es verdad que tengo cédula.`}</p>\n        <p>{`Sin embargo, no es que tenga cédula `}<em parentName=\"p\">{`porque`}</em>{` puedo votar.`}</p>\n        <ul>\n          <li parentName=\"ul\">{`Poder votar no lleva a que me den mi cédula.`}</li>\n          <li parentName=\"ul\">{`Poder votar ocurre después de tener la cédula.`}</li>\n        </ul>\n        <Tooltip mdxType=\"Tooltip\">El condicional sólo nos dice que podemos inferir una proposición a partir de otra, nada más.</Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones suficientes`}</h1>\n        <p>{`El operador condicional puede usarse fácilmente para expresar que una proposición es `}<strong parentName=\"p\">{`condición suficiente`}</strong>{` de otra.`}</p>\n        <Example mdxType=\"Example\">\n          <p>{`Basta con que me pongan reggaetón para que me enrumbe.`}</p>\n        </Example>\n        <p>{`En este ejemplo, la proposición `}<strong parentName=\"p\">{`«`}{`A Juan le ponen reggeatón`}{`»`}</strong>{` es condición suficiente para la proposición `}<strong parentName=\"p\">{`«`}{`Juan se enrumba`}{`»`}</strong>{`. Así las cosas:`}</p>\n        <Example mdxType=\"Example\">\n          <p>{`Si a Juan le ponen reggeatón, entonces se enrumba.`}</p>\n          <p>{`Rj → Ej`}</p>\n        </Example>\n        <Tooltip mdxType=\"Tooltip\">\n  Si bien hay patrones gramaticales (i.e. \"Si...entonces...\"), es mejor no\n  apegarse mucho a ellos. Mejor pensar en qué se sigue de qué.\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones necesarias`}</h1>\n        <p>{`También podemos usar el operador condicional para expresar `}<strong parentName=\"p\">{`condiciones necesarias`}</strong>{`.`}</p>\n        <Example mdxType=\"Example\">Es necesario que me pongan reggeatón para que me enrumbe.</Example>\n        <p>{`En este ejemplo, la proposición `}<strong parentName=\"p\">{`«`}{`A Juan le ponen reggaetón`}{`»`}</strong>{` es condición necesaria para la proposición `}<strong parentName=\"p\">{`«`}{`Juan se enrumba`}{`»`}</strong>{` (i.e., si la primera es falsa, la otra también).`}</p>\n        <Example mdxType=\"Example\">\n          <p>{`Si a Juan `}<strong parentName=\"p\">{`no`}</strong>{` le ponen reggaetón, Juan `}<strong parentName=\"p\">{`no`}</strong>{` se enrumba.`}</p>\n          <p>{`~Rj → ~Ej`}</p>\n        </Example>\n        <p>{`En este caso es importante fijarse en las `}<strong parentName=\"p\">{`negaciones`}</strong>{` para formalizar correctamente la relación.`}</p>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones necesarias`}</h1>\n        <p>{`Una manera de entender que una proposición es condición necesaria para otra es mediante la formalización `}<strong parentName=\"p\">{`~Pa → ~Qa`}</strong>{`.`}</p>\n        <p>{`Sin embargo, hay otra manera interesante de formalizar esta relación. Consideremos nuevamente el ejemplo:`}</p>\n        <Example mdxType=\"Example\">Es necesario que me pongan reggeatón para que me enrumbe.</Example>\n        <p>{`En este caso, ¿qué puedo `}<strong parentName=\"p\">{`inferir`}</strong>{` de que esté enrumbado? `}</p>\n        <p>{`Si estoy enrumbado, podemos `}<strong parentName=\"p\">{`inferir`}</strong>{` que me pusieron reggeatón. En ese orden de ideas, también puedo formalizar esta relación así:`}</p>\n        <Example mdxType=\"Example\">\n          <p>{`Si Juan está enrumbado, le pusieron reggaetón.`}</p>\n          <p>{`Ej → Rj`}</p>\n        </Example>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Condiciones suficientes y necesarias`}</h1>\n        <p>{`Hay ocasiones en las que una proposición será `}<strong parentName=\"p\">{`condición suficiente y necesaria`}</strong>{` de otra.`}</p>\n        <Example mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n            <p>{`Sacar al menos 3.0 en el curso. (Sa)`}</p>\n            <p>{`Pasar el curso (Ca)`}</p>\n          </Flex>\n        </Example>\n        <p>{`En este caso, los siguientes condicionales son ambos verdaderos:`}</p>\n        <Example mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n            <p>{`Sa → Ca`}</p>\n            <p>{`Ca → Sa`}</p>\n          </Flex>\n        </Example>\n        <p>{`Esto significa que la siguiente conjunción es verdadera.`}</p>\n        <Example mdxType=\"Example\">(Sa → Ca) & (Ca → Sa)</Example>\n        <p>{`Para estos casos, podemos usar el operador `}<strong parentName=\"p\">{`bicondicional`}</strong>{` ('↔' o '`}{`≡`}{`').`}</p>\n        <Example mdxType=\"Example\">Sa ↔ Ca</Example>\n      </Slide>\n    </PSection>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Resumen`}</h1>\n      <p>{`Hay dos formas en las que una proposición (`}<strong parentName=\"p\">{`P`}</strong>{`) puede ser condición de otra (`}<strong parentName=\"p\">{`Q`}</strong>{`).`}</p>\n      <Flex mdxType=\"Flex\">\n        <div align=\"center\" style={{\n          \"width\": \"100%\"\n        }}>\n          <p>{`Condición suficiente`}</p>\n          <p><em parentName=\"p\">{`Si P es verdadera, Q es verdadera.`}</em></p>\n          <p>{`P → Q`}</p>\n          <p>{`(~Q → ~P)`}</p>\n        </div>\n        <div align=\"center\" style={{\n          \"width\": \"100%\"\n        }}>\n          <p>{`Condición necesaria`}</p>\n          <p><em parentName=\"p\">{`Si P es falsa, Q es falsa.`}</em></p>\n          <p>{`~P → ~Q`}</p>\n          <p>{`(Q → P)`}</p>\n        </div>\n      </Flex>\n      <p>{`Podemos usar el operador `}<strong parentName=\"p\">{`condicional`}</strong>{` (→) (y `}<strong parentName=\"p\">{`bicondicional`}</strong>{` (↔)) para expresar estas relaciones entre proposiciones.`}</p>\n    </Slide>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\n\nexport function Slide(props) {\n  return (\n    <section>\n      <h3 className=\"sectionTitle\">{props.secTitle}</h3>\n      {props.children}\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport function PSection(props) {\n  const sectionSlides = React.Children.map(props.children, (child, title) => {\n    return React.cloneElement(child, {\n      secTitle: props.title,\n    });\n  });\n\n  return <section>{sectionSlides}</section>;\n}\n","import React from \"react\";\n\nexport function TitleSlide(props) {\n  const date = new Date().getFullYear();\n\n  return (\n    <section className=\"title\">\n      <h3>{props.clase}</h3>\n      <h1> {props.title}</h1>\n\n      <div className=\"author\">Juan R. Loaiza</div>\n\n      <small>\n        Escuela de Ciencias Humanas <br />\n        Universidad del Rosario <br />\n        {date}\n      </small>\n    </section>\n  );\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}