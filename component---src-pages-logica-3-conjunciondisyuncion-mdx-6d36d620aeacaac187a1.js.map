{"version":3,"sources":["webpack:///./src/components/logic/truthtable.js","webpack:///./src/pages/logica/3-conjunciondisyuncion.mdx"],"names":["TruthTable","children","props","processRow","row","isHeader","cells","split","map","cell","animate","includes","divides","main","replace","join","header","rows","length","shift","className","dangerouslySetInnerHTML","__html","_frontmatter","makeShortcode","name","console","warn","TitleSlide","PSection","Slide","Animate","Example","Flex","Definition","Tooltip","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","title","clase","parentName","style","word","data-fragment-index","align","isMDXComponent"],"mappings":"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","file":"component---src-pages-logica-3-conjunciondisyuncion-mdx-6d36d620aeacaac187a1.js","sourcesContent":["import React from \"react\";\n\nexport function TruthTable({ children, ...props }) {\n  function processRow(row, isHeader) {\n    let cells = row.split(\",\");\n\n    cells = cells.map((cell) => {\n      let animate = cell.includes(\"*\") ? true : false;\n      let divides = cell.includes(\"|\") ? true : false;\n      let main = cell.includes(\"!\") ? true : false;\n\n      if (isHeader === true) {\n        return (\n          `<th class='${animate ? \"fragment\" : \"\"} ${\n            divides ? \"divides\" : \"\"\n          }'>` +\n          cell.replace(/[*|]/, \"\") +\n          \"</th>\"\n        );\n      } else {\n        return (\n          `<td class='${animate ? \"fragment\" : \"\"} ${\n            divides ? \"divides\" : \"\"\n          } ${\n            main ? \"main\" : \"\"\n          }'>` +\n          cell.replace(/[*!|]+/, \"\") +\n          \"</td>\"\n        );\n      }\n    });\n    return \"<tr>\" + cells.join(\"\") + \"</tr>\";\n  }\n\n  let header = \"\";\n  let rows = children.props.children.split(\"\\\\newline\");\n\n  if (rows.length > 1) {\n    header = rows.shift();\n\n    header = processRow(header, true);\n  }\n\n  rows = rows.map(processRow, false);\n\n  return (\n    <table {...props} className=\"truth-table\">\n      <thead dangerouslySetInnerHTML={{ __html: header }} />\n      <tbody dangerouslySetInnerHTML={{ __html: rows.join(\"\") }} />\n    </table>\n  );\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/juanrloaiza/Documents/Universidad/URosario/2021-1S/Diapositivas/src/components/presentation.js\";\nimport { TruthTable } from \"/src/components/logic/truthtable\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TitleSlide = makeShortcode(\"TitleSlide\");\nconst PSection = makeShortcode(\"PSection\");\nconst Slide = makeShortcode(\"Slide\");\nconst Animate = makeShortcode(\"Animate\");\nconst Example = makeShortcode(\"Example\");\nconst Flex = makeShortcode(\"Flex\");\nconst Definition = makeShortcode(\"Definition\");\nconst Tooltip = makeShortcode(\"Tooltip\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TitleSlide title=\"Conjunciones y disyunciones\" clase=\"Lógica ECH\" mdxType=\"TitleSlide\" />\n    <PSection title=\"Repaso\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Conceptos clave`}</h1>\n        <Animate mdxType=\"Animate\">\n          <ul>\n            <li parentName=\"ul\">{`Una proposición es aquello que podemos decir es `}<strong parentName=\"li\">{`verdadero`}</strong>{` o `}<strong parentName=\"li\">{`falso`}</strong>{`.`}</li>\n            <li parentName=\"ul\">{`Varias oraciones pueden expresar la `}<strong parentName=\"li\">{`misma`}</strong>{` proposición.`}\n              <ul parentName=\"li\">\n                <li parentName=\"ul\">{`\"En Barranquilla hace mucho calor.\"`}</li>\n                <li parentName=\"ul\">{`\"Hace mucho calor en Barranquilla.\"`}</li>\n                <li parentName=\"ul\">{`\"It's very hot in Barranquilla.\"`}</li>\n              </ul>\n            </li>\n            <li parentName=\"ul\">{`La misma oración puede expresar proposiciones `}<strong parentName=\"li\">{`diferentes`}</strong>{`.`}\n              <ul parentName=\"li\">\n                <li parentName=\"ul\">{`\"Me gusta jugar ajedrez.\"`}</li>\n              </ul>\n            </li>\n          </ul>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Conceptos clave`}</h1>\n        <Animate mdxType=\"Animate\">\n          <ul>\n            <li parentName=\"ul\">{`Expresamos proposiciones atómicas distinguiendo `}<strong parentName=\"li\">{`sujetos`}</strong>{` y `}<strong parentName=\"li\">{`predicados`}</strong>{`.`}\n              <ul parentName=\"li\">\n                <li parentName=\"ul\">{`Constantes de sujeto: Letras minúsculas`}</li>\n                <li parentName=\"ul\">{`Predicados: Letras mayúsculas`}</li>\n              </ul>\n            </li>\n            <li parentName=\"ul\">{`Podemos expresar negaciones usando el símbolo '~'`}</li>\n          </ul>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejercicios de repaso`}</h1>\n        <Animate mdxType=\"Animate\">\n          <table>\n            <thead parentName=\"table\">\n              <tr parentName=\"thead\">\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Oración`}</th>\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Formalización`}</th>\n              </tr>\n            </thead>\n            <tbody parentName=\"table\">\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`\"Duque es presidente.\"`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Pd`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`\"Duque no es futbolista.\"`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Fd`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`\"Duque querió a Carlos Holmes.\"`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Qdc`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`\"Carlos Holmes querió a Duque.\"`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Qcd`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`\"Duque no querió a Santos.\"`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Qds`}</td>\n              </tr>\n            </tbody>\n          </table>\n        </Animate>\n      </Slide>\n    </PSection>\n    <PSection title=\"Introducción\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Proposiciones atómicas`}</h1>\n        <p>{`Recordemos que la forma más básica de una proposición es decir que un `}<strong parentName=\"p\">{`sujeto`}</strong>{` tiene un `}<strong parentName=\"p\">{`predicado`}</strong>{`.`}</p>\n        <Animate mdxType=\"Animate\">\n          <ul>\n            <li parentName=\"ul\">{`Juan juega ajedrez.`}</li>\n            <li parentName=\"ul\">{`Marcela juega ajedrez.`}</li>\n          </ul>\n          <p>{`Estas proposiciones se conocen como `}<strong parentName=\"p\">{`proposiciones atómicas`}</strong>{` (o `}<strong parentName=\"p\">{`simples`}</strong>{`), pues no pueden dividirse en `}<strong parentName=\"p\">{`otras proposiciones`}</strong>{`.`}</p>\n          <p>{`Hay sin embargo proposiciones que sí pueden dividirse.`}</p>\n        </Animate>\n        <div style={{\n          \"display\": \"flex\",\n          \"flexDirection\": \"column\"\n        }}>\n          <Example animate mdxType=\"Example\">\n            <p>{`Juan juega ajedrez `}<strong parentName=\"p\">{`y`}</strong>{` Marcela también.`}</p>\n          </Example>\n          <div style={{\n            \"display\": \"flex\",\n            \"justifyContent\": \"space-around\",\n            \"color\": \"#aa50ad\"\n          }}>\n            <Animate mdxType=\"Animate\">\n              <p>{`Juan juega ajedrez.`}</p>\n              <p>{`Marcela juega ajedrez.`}</p>\n            </Animate>\n          </div>\n        </div>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Conectores lógicos`}</h1>\n        <p>{`Podemos expresar `}<strong parentName=\"p\">{`proposiciones complejas`}</strong>{` `}<em parentName=\"p\">{`conectando`}</em>{` varias proposiciones.`}</p>\n        <Animate mdxType=\"Animate\">\n          <p>{`Para conectar proposiciones, podemos usar un tipo de operador: los `}<strong parentName=\"p\">{`conectores lógicos`}</strong>{`.`}</p>\n          <p>{`Los conectores lógicos son operadores que `}<em parentName=\"p\">{`conectan`}</em>{` `}<strong parentName=\"p\">{`dos`}</strong>{` proposiciones.`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <p>{`Juan juega ajedrez `}<strong parentName=\"p\">{`y`}</strong>{` Marcela juega ajedrez.`}</p>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`En este curso usaremos cuatro conectores lógicos, y hoy introduciremos dos.`}</p>\n        </Animate>\n      </Slide>\n    </PSection>\n    <PSection title=\"Conjunciones\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Conjunción`}</h1>\n        <Example mdxType=\"Example\">Juan juega ajedrez y Marcela también.</Example>\n        <p>{`En el español, la partícula `}<strong parentName=\"p\">{`'y'`}</strong>{` a menudo expresa que dos proposiciones son verdaderas a la vez.`}</p>\n        <Example animate mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n    \nJuan juega ajedrez.\n            <p>{`Marcela juega ajedrez.`}</p>\n          </Flex>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Estas proposiciones complejas se conocen como `}<strong parentName=\"p\">{`conjunciones`}</strong>{`.`}</p>\n        </Animate>\n        <Definition word=\"P & Q\" animate mdxType=\"Definition\">\n          <p>{`P es verdadera y Q también es verdadera.`}</p>\n        </Definition>\n        <Animate mdxType=\"Animate\">\n          <p>{`Para las conjunciones, podemos usar el símbolo '&' o el símbolo '∧'.`}</p>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Formalización`}</h1>\n        <Example mdxType=\"Example\"> Juan juega ajedrez y Marcela también.</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Para formalizar esta proposición, formalicemos primero las proposiciones que componen a esta conjunción.`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <p>{`[Juan juega ajedrez]`}{` `}<strong parentName=\"p\">{`y`}</strong>{` `}{`[Marcela juega ajedrez]`}{`.`}</p>\n          <p>{`[Aj]`}{` `}<strong parentName=\"p\">{`y`}</strong>{` `}{`[Am]`}</p>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`A continuación, podemos formalizar esta conjunción uniendo ambas proposiciones con el símbolo '&'.`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n   \nAj & Am\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Esto expresa que ambas proposiciones son verdaderas.`}</p>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Agrupando proposiciones`}</h1>\n        <p>{`¿Qué pasa cuando tenemos más de dos proposiciones?`}</p>\n        <Example animate mdxType=\"Example\">Juan, Marcela y Paula juegan ajedrez.</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Un conector lógico siempre conecta `}<strong parentName=\"p\">{`dos`}</strong>{` proposiciones. En ese sentido, la siguiente formalización sería incorrecta:`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">Aj & Am & Ap</Example>\n      </Slide>\n      <Slide mdxType=\"Slide\">\n        <h1>{`Agrupando proposiciones`}</h1>\n        <Example mdxType=\"Example\">Aj & Am & Ap</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Para formalizar esta proposición correctamente, debemos formar grupos de dos proposiciones usando paréntesis.`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n            <p>{`(Aj & Am) & Ap`}</p>\n            <p>{`Aj & (Am & Ap)`}</p>\n          </Flex>\n        </Example>\n        <Tooltip animate mdxType=\"Tooltip\">\n  No siempre dará lo mismo dónde pongamos los paréntesis (más adelante...)\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejemplos`}</h1>\n        <Animate mdxType=\"Animate\">\n          <table>\n            <thead parentName=\"table\">\n              <tr parentName=\"thead\">\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Oración`}</th>\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Proposición`}</th>\n              </tr>\n            </thead>\n            <tbody parentName=\"table\">\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Germán y Carlos son simpáticos.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Sg & Sc`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Germán, Carlos y Fabio son simpáticos.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`(Sg & Sc) & Sf`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Germán es simpático y Carlos no.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Sg & ~Sc`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Germán y Fabio le caen bien a Carlos`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Cgc & Cfc`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Germán le cae bien a Fabio y Carlos no.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Cgf & ~Ccf`}</td>\n              </tr>\n            </tbody>\n          </table>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Otras formas de la conjunción`}</h1>\n        <p>{`Hemos dicho que una conjunción es una proposición expresa que dos proposiciones son verdaderas.`}</p>\n        <Example animate mdxType=\"Example\">\"Germán es simpático pero Carlos no.\"</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Esta oración usa la partícula 'pero' y expresa que ambas proposiciones son verdaderas.`}</p>\n          <ul>\n            <li parentName=\"ul\">{`\"Aunque Germán es simpático, Carlos no.\"`}</li>\n            <li parentName=\"ul\">{`\"Así como Germán, Carlos es simpático.\"`}</li>\n          </ul>\n        </Animate>\n        <Tooltip animate mdxType=\"Tooltip\">\n  La partícula 'y' no es la única que expresa conjunciones (ni lo hace en todos\n  los casos).\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Verdad y falsedad de la conjunción`}</h1>\n        <p>{`Si una conjunción es una proposición expresa que dos proposiciones son verdaderas, ¿cuándo entonces decimos que una conjunción es falsa?`}</p>\n        <Example mdxType=\"Example\">Germán y Carlos son simpáticos.</Example>\n        <table className=\"truth-table\">\n  <tbody>\n    <tr className=\"fragment\" data-fragment-index=\"2\">\n      <td className=\"\">Sg</td>\n      <td className=\"\"> &amp;</td>\n      <td className=\"\"> Sc </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"3\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"4\">\n        {\" \"}\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"3\">\n        {\" \"}\n        V{\" \"}\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"5\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"6\">\n        {\" \"}\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"5\">\n        {\" \"}\n        F{\" \"}\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"7\">\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"8\">\n        {\" \"}\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"7\">\n        {\" \"}\n        V{\" \"}\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"9\">\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"10\">\n        {\" \"}\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"9\">\n        {\" \"}\n        F\n      </td>\n    </tr>\n  </tbody>\n        </table>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Conjunciones y negaciones`}</h1>\n        <p>{`Recordemos que podemos expresar la negación de una proposición usando el símbolo '~'.`}</p>\n        <Example animate mdxType=\"Example\">\n          <p>{`Gabriela no estudia sociología.`}<br />{`\n~Sg`}</p>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`¿Qué pasa entonces si queremos expresar la negación de una conjunción?`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">Gabriela no estudia sociología y antropología.</Example>\n      </Slide>\n      <Slide mdxType=\"Slide\">\n        <h1>{`Conjunciones y negaciones`}</h1>\n        <Example mdxType=\"Example\">Gabriela no estudia sociología y antropología.</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Como la vez pasada, reescribamos esta oración:`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <p><strong parentName=\"p\">{`No es verdad que`}</strong>{` Gabriela estudie sociología y antropología.`}</p>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Dado que podemos usar '~' para expresar 'No es verdad que...', podemos entonces formalizar así:`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <p>{`~(Gabriela estudia sociología y antropología.)`}<br />{`\n~(Sg & Ag)`}</p>\n        </Example>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Conjunciones y negaciones`}</h1>\n        <p>{`Es importante notar que `}<strong parentName=\"p\">{`~(Sg & Ag)`}</strong>{` no es lo mismo que `}<strong parentName=\"p\">{`~Sg & ~Ag`}</strong>{`.`}</p>\n        <Flex align=\"center\" mdxType=\"Flex\">\n          <div className=\"fragment\">\n            <p><strong parentName=\"p\">{`~(Sg & Ag)`}</strong></p>\n            <p>{`Gabriela no estudia ambas carreras.`}</p>\n          </div>\n          <div className=\"fragment\" style={{\n            \"width\": \"50%\"\n          }}>\n            <p><strong parentName=\"p\">{`~Sg & ~Ag`}</strong></p>\n            <p>{`Gabriela no estudia ninguna de las dos carreras.`}</p>\n          </div>\n        </Flex>\n        <Tooltip animate mdxType=\"Tooltip\">\n          <p>{`Es distinta la `}<strong parentName=\"p\">{`negación de una conjunción`}</strong>{` que la `}<strong parentName=\"p\">{`conjunción de dos negaciones`}</strong>{`.`}</p>\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Operador lógico principal`}</h1>\n        <p>{`Cuando tenemos varios operadores lógicos (e.g., conjunciones y negaciones), habrá siempre un operador que sea prioridad.`}</p>\n        <Animate mdxType=\"Animate\">\n          <Flex mdxType=\"Flex\">\n            <div>\n              <p><strong parentName=\"p\">{`~`}</strong>{`(Sg & Ag)`}</p>\n            </div>\n            <div>\n              <p>{`~Sg `}<strong parentName=\"p\">{`&`}</strong>{` ~Ag`}</p>\n            </div>\n          </Flex>\n        </Animate>\n        <Animate mdxType=\"Animate\">\n          <p>{`Este operador se conoce como el `}<strong parentName=\"p\">{`operador lógico principal`}</strong>{` y es el que le da sentido a toda la oración.`}</p>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejemplos`}</h1>\n        <Animate mdxType=\"Animate\">\n          <table>\n            <thead parentName=\"table\">\n              <tr parentName=\"thead\">\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Oración`}</th>\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Formalización`}</th>\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Operador lógico principal`}</th>\n              </tr>\n            </thead>\n            <tbody parentName=\"table\">\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gabriela no estudia ni antroplogía ni sociología.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Ag & ~Sg`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`&`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gabriela no estudia tanto antropología como sociología.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~(Ag & Sg)`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Bernal no tiene perro ni gato.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Pb & ~Gb`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`&`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Bernal no tiene tanto perro como gato.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~(Pb & Gb)`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Bernal tiene perro, pero no gato.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Pb & ~Gb`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`&`}</td>\n              </tr>\n            </tbody>\n          </table>\n        </Animate>\n      </Slide>\n    </PSection>\n    <PSection title=\"Disyunciones\" mdxType=\"PSection\">\n      <Slide mdxType=\"Slide\">\n        <h1>{`Disyunciones`}</h1>\n        <p>{`Otra forma en la que podemos conectar proposiciones es afirmando que al menos una es verdadera (pero no necesariamente las dos).`}</p>\n        <Example animate mdxType=\"Example\">\"Gómez es ingeniera o matemática.\"</Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Esta proposición dice que al menos una de las dos proposiciones es verdadera:`}</p>\n        </Animate>\n        <Example animate mdxType=\"Example\">\n          <Flex mdxType=\"Flex\">\n            <p>{`Gómez es ingeniera.`}</p>\n            <p>{`Gómez es matemática.`}</p>\n          </Flex>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Sin embargo, la proposición no nos dice cuál de las dos proposiciones es verdadera.`}</p>\n          <p>{`Este tipo de proposición se conoce como una `}<strong parentName=\"p\">{`disyunción`}</strong>{`.`}</p>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Formalización`}</h1>\n        <p>{`Para expresar una disyunción, podemos usar el símbolo 'v'.`}</p>\n        <Example animate mdxType=\"Example\">\n          <p>{`Gómez es ingeniera o matemática.`}</p>\n          <p>{`Ig v Mg`}</p>\n        </Example>\n        <Animate mdxType=\"Animate\">\n          <p>{`Es importante notar que en lógica, esta disyunción es `}<strong parentName=\"p\">{`incluyente`}</strong>{`.`}</p>\n        </Animate>\n        <Flex mdxType=\"Flex\">\n          <Animate mdxType=\"Animate\">\n            <p><strong parentName=\"p\">{`Incluyente`}</strong><br />{`\nAl menos una proposición es verdadera.`}</p>\n            <div style={{\n              \"width\": \"50%\"\n            }}>\n              <p><strong parentName=\"p\">{`Excluyente`}</strong><br />{`\nAl menos una proposición es verdadera `}<strong parentName=\"p\">{`pero no las dos`}</strong>{`.`}</p>\n            </div>\n          </Animate>\n        </Flex>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Disyunciones y negaciones`}</h1>\n        <p>{`¿Qué pasa cuando negamos una disyunción?`}</p>\n        <p>{`Si una disyunción dice que al menos una de las dos proposiciones es verdadera, su negación expresa que ninguna de las proposiciones es verdadera.`}</p>\n        <table className=\"truth-table\">\n  <tbody>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"1\">\n        Ig\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"1\">\n        v\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"1\">\n        Mg{\" \"}\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"3\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"4\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"3\">\n        V\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"5\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"6\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"5\">\n        F\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"7\">\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"8\">\n        V\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"7\">\n        V\n      </td>\n    </tr>\n    <tr>\n      <td className=\"fragment\" data-fragment-index=\"9\">\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"10\">\n        F\n      </td>\n      <td className=\"fragment\" data-fragment-index=\"9\">\n        F\n      </td>\n    </tr>\n  </tbody>\n        </table>\n        <Tooltip animate mdxType=\"Tooltip\">\n          <p>{`Nuevamente, es distinto una `}<strong parentName=\"p\">{`negación de una disyunción`}</strong>{` que una `}<strong parentName=\"p\">{`disyunción de negaciones`}</strong>{`.`}</p>\n        </Tooltip>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Ejemplos`}</h1>\n        <Animate mdxType=\"Animate\">\n          <table>\n            <thead parentName=\"table\">\n              <tr parentName=\"thead\">\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Oración`}</th>\n                <th parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Formalización`}</th>\n              </tr>\n            </thead>\n            <tbody parentName=\"table\">\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gómez estudia matemáticas o artes.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Mg v Ag`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gómez no estudia matemáticas o artes.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~(Mg v Ag)`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gómez no estudia matemáticas o no estudia artes.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Mg v ~Ag`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gómez no estudia matemáticas o estudiar artes.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`~Mg v Ag`}</td>\n              </tr>\n              <tr parentName=\"tbody\">\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Gómez estudia matemáticas o estudia artes y filosofía.`}</td>\n                <td parentName=\"tr\" {...{\n                  \"align\": null\n                }}>{`Mg v (Ag & Fg)`}</td>\n              </tr>\n            </tbody>\n          </table>\n        </Animate>\n      </Slide><Slide mdxType=\"Slide\">\n        <h1>{`Disyunciones y conjunciones`}</h1>\n        <p>{`Cuando usamos conjunciones y disyunciones, es central que nos fijemos en cuál de los dos operadores es el operador lógico principal.`}</p>\n        <Animate mdxType=\"Animate\">\n          <ul>\n            <li parentName=\"ul\">{`\"María quiere una camioneta o una moto y un carro.\"`}</li>\n          </ul>\n        </Animate>\n        <Flex mdxType=\"Flex\">\n          <div className=\"fragment\">\n            <p><strong parentName=\"p\">{`Cm v (Mm & Rm)`}</strong></p>\n            <p>{`Camioneta.`}</p>\n            <p>{`Moto y carro.`}</p>\n          </div>\n          <div className=\"fragment\">\n            <p><strong parentName=\"p\">{`(Cm v Mm) & Rm`}</strong></p>\n            <p>{`Camioneta y carro`}</p>\n            <p>{`Moto y carro`}</p>\n          </div>\n        </Flex>\n      </Slide>\n    </PSection>\n    <Slide mdxType=\"Slide\">\n      <h1>{`Resumen`}</h1>\n      <Animate mdxType=\"Animate\">\n        <ul>\n          <li parentName=\"ul\">{`Una `}<strong parentName=\"li\">{`proposición compleja`}</strong>{` es una proposición compuesta de varias proposiciones.`}</li>\n          <li parentName=\"ul\">{`Para expresar proposiciones complejas, podemos usar `}<strong parentName=\"li\">{`conectores loǵicos`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`El operador de `}<strong parentName=\"li\">{`conjunción`}</strong>{` ('&') dice que dos proposiciones son verdaderas.`}</li>\n          <li parentName=\"ul\">{`El operador de `}<strong parentName=\"li\">{`disyunción`}</strong>{` ('v') dice que al menos una proposición es verdadera.`}</li>\n          <li parentName=\"ul\">{`Dependiendo de cómo organicemos la proposición, habrá distintos `}<strong parentName=\"li\">{`operadores lógicos principales`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`No es lo mismo la negación de una conjunción/disyunción que la conjunción/disyunción de negaciones.`}</li>\n        </ul>\n      </Animate>\n    </Slide>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}